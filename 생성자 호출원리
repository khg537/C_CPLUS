1. 생성자, 소멸자 호출의 정확한 원리
=> 컴파일러가 "기반 클래스" 및 "멤버 데이터"의 생성자(소멸자)를 호출하는 코드를 생성해 주는 것

2. 생성자/소멸자의 호출 순서
=> 기반클래스 멤버의 생성자
=> 기반클래서의 생성자
=> 파생클래스 멤버의 생성자
=> 파생클래스의 생성자

3. 사용자가 생성자 호출 순서를 변경할 수 없다.
=> 항상 기반클래스 생성자가 먼저 호출되고, 멤버데이터의 생성자가 호출된다.

4. 컴파일러가 생성한 코드는 항상 디폴트 생성자를 호출한다.
=> 디폴트 생성자가 없는 경우는 다른 생성자를 직접 지정해주면 됨...


